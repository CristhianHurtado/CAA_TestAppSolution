@model CAA_TestApp.Models.Inventory

@{
    ViewData["Title"] = "Send Inv.";
}

<h1>@Html.DisplayFor(model => model.Product.Name)</h1>
<div>
    <hr />
        @{
        if (Model.ItemPhoto?.Content != null)
        {
            @:<div>
                string imageBase64 = Convert.ToBase64String(Model.ItemPhoto.Content);
                string imageSrc = string.Format("data:" + Model.ItemPhoto.MimeType + ";base64,{0}", imageBase64);
                <img src="@imageSrc" alt="Profile Picture of @Model.ISBN" title="Profile Picture of @Model.ISBN" class="img-fluid rounded" />
            @:</div><hr />
        }
    }
    <dl class="row">
      @*<!--  <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ISBN)
        </dd>-->*@
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Quantity)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Quantity)
        </dd>
    @*
      <!--  <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ShelfOn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ShelfOn)
        </dd>-->*@
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Cost)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Cost)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateReceived)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateReceived)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Location.City)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Product)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
                <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Notes)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Notes)
        </dd>
    </dl>
    @{
        ViewData["IsbnCode"] = ViewBag.ISBN;
     }
</div>

<form asp-action="SendInv" method="post"> 
     <div>
        <label asp-for="LocationID" class="control-label"><strong>From:</strong></label>
        <select asp-for="LocationID" name="locationFrom" class="form-control" asp-items="ViewBag.LocationID" ></select>
        <span asp-validation-for="LocationID" class="text-danger"></span>
     </div>
    
     <div >
        <label asp-for="LocationID" class="control-label"><strong>To:</strong></label>
        <select asp-for="LocationID" name="locationTo" class="form-control" asp-items="ViewBag.LocationID" ></select>
        <span asp-validation-for="LocationID" class="text-danger"></span>
     </div>
    <div>
        <div class="col-lg-6 col-lg-offset-3">
            <p>Quantity:</p>
            <input type="number" name="quantity" />
        </div>
    </div>
    <div class="form-group">
        <input name="submit" type="submit" value="Create" class="btn btn-primary btn-style" />
        <a asp-action="Index">Back to List</a>
    </div>
 </form>
 <br></br>

 <script>
     $(document).ready(function (){
         $("#frm"), submit(function (e){
             e.preventDefault();
         })
     })
 </script>