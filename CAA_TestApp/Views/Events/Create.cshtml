@model CAA_TestApp.Models.Event

@{
    ViewData["Title"] = "Create";
}

<h1>Create New Event</h1>

<div id="dataDiv" data-chkData="@ViewBag.InventoryOptions"></div>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"><strong> Event Name</strong>*</label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"><strong>Date</strong>*</label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventLocation" class="control-label"><strong>Event Location</strong>*</label>
                <input asp-for="EventLocation" class="form-control" />
                <span asp-validation-for="EventLocation" class="text-danger"></span>
            </div>
            
             <div class="form-group">
                <label class="control-label" style="margin-top:5px;"><strong>Products Needed</strong>*</label>
                <div class="m-2">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<CAA_TestApp.ViewModels.CheckOptionVM> checkboxes = ViewBag.InventoryOptions;
                                foreach (var checkbox in checkboxes)
                                {
                                    if (cnt++ % 2 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        <input type="checkbox" id="chk" class="checkbox"
                                               name="selectedOptions"
                                               value="@checkbox.ID"
                                               @(Html.Raw(checkbox.Assigned ? "checked=\"checked\"" : "")) />
                                        @checkbox.DisplayText @:&nbsp;&nbsp;
                                    @:</td>
                                }
                        @:</tr>
                            }
                    </table>
                </div>
            </div>
            
            <div class="form-group">
                <label asp-for="Notes" class="control-label"><strong>Notes</strong></label>
                <span asp-validation-for="Notes" class="text-danger"></span>
                @Html.TextAreaFor(i => i.Notes, new { @class = "form-control" })
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-outline-primary btn-style" />
                    <a asp-action="Index">Back to List</a>

            </div>
        </form>
    </div>
    <div class="col-md-4">
      
            <div id="divQuantity"></div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
//Using JQUERY for retrieve data
$(document).ready(function() {
    //checks for all checkboxes and get the value (in this case would be the productID) returns as string
    $('.checkbox').change(function() {
        var selectedValues = [];
        $('.checkbox:checked').each(function() {
            selectedValues.push($(this).val());
        });

        console.log(selectedValues);

        //turns the selected IDs into ints
        var numberArray = $.map(selectedValues, function(str) {
            return parseInt(str, 10);
        });
        console.log(numberArray);

        //gets the array from the viewbag of all data for InvOptions
        let myArray = @Html.Raw(Json.Serialize(ViewBag.InventoryOptions));
        console.log(myArray);

        //filters all the objects that matches the ones selected
        var filteredArray = myArray.filter(function(item) {
            return numberArray.includes(item.id);
        });
        console.log(filteredArray);

        //creates the select list based on a viewData sent from the get method
        let selectString = '<select name="locations" class="form-select">';
        let locations = @Html.Raw(Json.Serialize(ViewBag.Locations));
        console.log(locations[0]);
        for (let i = 0; i < locations.length; i++) {
          selectString += '<option value="' + locations[i].value + '">' + locations[i].text + '</option>';
        }
        selectString += '</select>';

        //creates the string that is going to be passed into a div (equivalent as InnerHTML)
        let aux = "";
        for(let i = 0; i < selectedValues.length; i++){
           aux += '<label><strong>' + filteredArray[i].displayText + '</strong></label><br/>' +
                  '<input class="form-control" type="number" name="quan"/>' + '<label><strong>Taken from:</strong></label>' + selectString + '<br/><hr/><br/>';
        }

        //Sets the .InnerHTML jquery property
        $('#divQuantity').html(aux);
    });
});
</script>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
