@using CAA_TestApp.Data;
@using CAA_TestApp.Models;
@model CAA_TestApp.Models.Event

@{
    ViewData["Title"] = "Create";
    var caa = ViewBag.conText;
    CaaContext _context = ViewBag.caa;
}

<h1>Create New Event</h1>

<div id="dataDiv" data-chkData="@ViewBag.InventoryOptions"></div>
<hr />
    <form asp-action="Create" method="post" enctype="multipart/form-data">

<div class="row">
        <input type="hidden" name="locations" class="hidden-locations-input" />
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"><strong> Event Name</strong>*</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"><strong>Date</strong>*</label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventLocation" class="control-label"><strong>Event Location</strong>*</label>
                <input asp-for="EventLocation" class="form-control" />
                <span asp-validation-for="EventLocation" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label" style="margin-top:5px;"><strong>Products Needed</strong>*</label>
                <div class="m-2">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<CAA_TestApp.ViewModels.CheckOptionVM> checkboxes = ViewBag.InventoryOptions;
                                foreach (var checkbox in checkboxes)
                                {
                                    if (cnt++ % 2 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        <input type="checkbox" id="chk" class="checkbox"
                                               name="selectedOptions"
                                               value="@checkbox.ID"
                                               @(Html.Raw(checkbox.Assigned ? "checked=\"checked\"" : "")) />
                                        @checkbox.DisplayText @:&nbsp;&nbsp;
                                    @:</td>
                                }
                        @:</tr>
                            }
                    </table>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Notes" class="control-label"><strong>Notes</strong></label>
                <span asp-validation-for="Notes" class="text-danger"></span>
                @Html.TextAreaFor(i => i.Notes, new { @class = "form-control" })
            </div>
            <br />

        </div>
        <div class="col-md-4">
            <table class="table-bordered" id="product-table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Location</th>
                        <th>Take Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @{var invs = caa;}
                    @foreach(Inventory item in invs)
                    {
                        @if (item.statusID != _context.statuses.FirstOrDefault(i => i.status == "Archived").ID)
                        {
                            @if (item.statusID != _context.statuses.FirstOrDefault(i => i.status == "On transit").ID)
                            {
                                <tr class="filterable" data-id="@item.Product.ID">
                                    @if(item.Quantity == 0)
                                    {
                                         <td colspan="4">no items for @item.Product.Name</td>
                                    }
                                    else
                                    {
                                        <td>
                                            @item.Product.Name
                                        </td>
                                        <td>
                                            @item.Quantity
                                        </td>
                                        <td>
                                            <input type="text" readonly name="locations" value="@item.Location.City"/>
                                        </td>
                                        <td>
                                            <input type="number" name="quan" min="0">
                                        </td>
                                    }
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        <hr />
        <div class="form-group">
            <input type="submit" value="Create" class="btn btn-outline-primary btn-style" />
                <a asp-action="Index">Back to List</a>

        </div>
</div>
    </form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
$(document).ready(function() {
  $("#product-table").hide();
  var visibleLocations = [];

  $('.checkbox').change(function() {
    var selectedValues = [];
    visibleLocations = [];
    $('.checkbox:checked').each(function() {
      selectedValues.push($(this).val());
    });

    $("#product-table tbody tr.filterable").each(function() {
      if ($.inArray($(this).attr("data-id"), selectedValues) !== -1) {
        $(this).show();
      } else {
        $(this).hide();
      }
    });

    var noItems = false;
    $('.checkbox:checked').each(function() {
      var checkboxId = $(this).val();
      var itemsCount = $("#product-table tr.filterable[data-id='" + checkboxId + "']").length;
      if (itemsCount === 0) {
        noItems = true;
        var rowExists = $("#product-table tbody tr[data-checkbox='" + checkboxId + "']").length > 0;
        if (!rowExists) {
          $("#product-table tbody").append(`<tr data-checkbox="${checkboxId}"><td colspan='4'>There are no items for ${$(this).parent().text().trim()}.</td></tr>`);
        }
      } else {
        $("#product-table tbody tr[data-checkbox='" + checkboxId + "']").remove();
      }
    });

    $("#product-table tbody tr.filterable").each(function() {
      if ($.inArray($(this).attr("data-id"), selectedValues) !== -1) {
        $(this).show();
        // If the row is visible, add its location to the array
        visibleLocations.push($(this).find("input[name='locations']").val());
      } else {
        $(this).hide();
      }
    });

    // Hide the table header if no items are selected
    if (selectedValues.length == 0) {
      $("#product-table thead").hide();
    } else {
      $("#product-table thead").show();
    }

    let uniqueArr = [...new Set(visibleLocations)];
    
    var dictionary = {};

    $("#product-table tbody tr.filterable:visible").each(function() {
      var productId = $(this).attr("data-id");
      var quantity = $(this).find("input[name='quan']").val();
      if (!dictionary[productId]) {
        dictionary[productId] = [quantity];
      } else {
        dictionary[productId].push(quantity);
      }
    console.log(dictionary);
    });

    

    // Hide the "no items" row if the checkbox is unchecked
    $('.checkbox:not(:checked)').each(function() {
      var checkboxId = $(this).val();
      $("#product-table tbody tr[data-checkbox='" + checkboxId + "']").remove();
    });
    $('.hidden-locations-input').val(uniqueArr.join(','));
    $("#product-table").show();
  });

});

</script>
<div>
</div>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
