@using CAA_TestApp.Data;
@using CAA_TestApp.Models;
@model CAA_TestApp.Models.Event

@{
    ViewData["Title"] = "Create";
    var caa = ViewBag.conText;
    CaaContext _context = ViewBag.caa;
}

<style>
    table.blueTable {
      border: 1px solid #1C6EA4;
      background-color: #EEEEEE;
      width: 100%;
      text-align: left;
      border-collapse: collapse;
    }
    table.blueTable td, table.blueTable th {
      border: 1px solid #AAAAAA;
      padding: 3px 2px;
    }
    table.blueTable tbody td {
      font-size: 13px;
    }
    table.blueTable thead {
      background: #1C6EA4;
      background: -moz-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
      background: -webkit-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
      background: linear-gradient(to bottom, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
      border-bottom: 2px solid #444444;
    }
    table.blueTable thead th {
      font-size: 15px;
      font-weight: bold;
      color: #FFFFFF;
      border-left: 2px solid #D0E4F5;
    }
    table.blueTable thead th:first-child {
      border-left: none;
    }
    table.blueTable tr td{
        justify-content:center;
    }

    table.blueTable tfoot td {
      font-size: 14px;
    }
    table.blueTable tfoot .links {
      text-align: right;
    }
    table.blueTable tfoot .links a{
      display: inline-block;
      background: #1C6EA4;
      color: #FFFFFF;
      padding: 2px 8px;
      border-radius: 5px;
}
</style>

<h1>Create New Event</h1>

<div id="dataDiv" data-chkData="@ViewBag.InventoryOptions"></div>
<hr />
    <form asp-action="Create" method="post" id="form" enctype="multipart/form-data">

<div class="row">
        <input type="hidden" name="locations" class="hidden-locations-input" />
        <input type="hidden" name="dataInfo" class="hidden-dataInfo-input" />
        <div class="col-md-4">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"><strong> Event Name</strong>*</label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger" title=" Enter your title here "></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"><strong>Date</strong>*</label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger" title=" Select the date for the event"></span>
            </div>
            <div class="form-group">
                <label asp-for="EventLocation" class="control-label"><strong>Event Location</strong>*</label>
                <input asp-for="EventLocation" class="form-control" />
                <span asp-validation-for="EventLocation" class="text-danger" title=" Enter the Location here "></span>
            </div>

            <div class="form-group">
                <label class="control-label" style="margin-top:5px;"><strong>Products Needed</strong>*</label>
                <div class="m-2">
                    <table>
                        <tr>
                            @{
                                int cnt = 0;
                                List<CAA_TestApp.ViewModels.CheckOptionVM> checkboxes = ViewBag.InventoryOptions;
                                foreach (var checkbox in checkboxes)
                                {
                                    if (cnt++ % 2 == 0)
                                    {
                                    @:</tr><tr>
                                    }
                                    @:<td>
                                        <input type="checkbox" id="chk" class="checkbox"
                                               name="selectedOptions"
                                               value="@checkbox.ID"
                                               @(Html.Raw(checkbox.Assigned ? "checked=\"checked\"" : "")) />
                                        @checkbox.DisplayText @:&nbsp;&nbsp;
                                    @:</td>
                                }
                        @:</tr>
                            }
                    </table>
                </div>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Notes" class="control-label"><strong>Notes</strong></label>
                <span asp-validation-for="Notes" class="text-danger" title=" Enter your notes for the event here"></span>
                @Html.TextAreaFor(i => i.Notes, new { @class = "form-control" })
            </div>
            <br />

        </div>
        <div class="col-md-4">
            <table class="blueTable" id="product-table">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Location</th>
                        <th>Take Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(Inventory item in caa)
                    {
                        @if (item.statusID != _context.statuses.FirstOrDefault(i => i.status == "Archived").ID)
                        {
                            @if (item.statusID != _context.statuses.FirstOrDefault(i => i.status == "On transit").ID)
                            {
                                <tr class="filterable" style="color:black; justify-content:center" data-id="@item.Product.ID">
                                    @if(item.Quantity == 0)
                                    {
                                         <td style="justify-content:center; color:orangered; height:45px;" colspan="4"><img src="~/images/warning.png" style="height:10px; width:10px;" /> no items for @item.Product.Name</td>
                                    }
                                    else
                                    {
                                        <td>
                                            @item.Product.Name
                                        </td>
                                        <td>
                                            @item.Quantity
                                        </td>
                                        <td>
                                            <input type="text" readonly name="locations" value="@item.Location.City" disabled style="border: 0px; background-color:transparent;"/>
                                        </td>
                                        <td>
                                            <input class="form-control" type="number" value="0" name="quan" min="0">
                                        </td>
                                    }
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>
        <hr />
        <div class="form-group">
            <input type="submit" value="Create" title=" Click here to create the new event" class="btn btn-outline-primary btn-style" />
                <a asp-action="Index" title=" Click here to go back to main list">Back to List</a>

        </div>
</div>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/js/itemTableEvents.js"></script>
<script>
$("#form").submit(function(event) {

  var dictionary = {};
  var errors = [];

  $("#product-table tbody tr.filterable:visible").each(function () {
    var productId = $(this).attr("data-id");
    var location = $(this).find("input[name='locations']").val();
    var quantity = $(this).find("input[name='quan']").val();
    var availableQuantity = parseInt($(this).find("td:eq(1)").text());

    if (!dictionary[productId]) {
      dictionary[productId] = [[location, quantity]];
    } else {
      dictionary[productId].push([location, quantity]);
    }

    if (parseInt(quantity) > availableQuantity) {
      event.preventDefault();
      errors.push(`Quantity of ${quantity} exceeds available quantity of ${availableQuantity} for product ${productId}`);
      if ($(this).find(".alert-span").length === 0) {
        $(this).append(`<td><span class="alert-span" style="color:red;">Quantity exceeds available quantity</span></td>`);
      }
    } else {
      $(this).find(".alert-span").remove();
    }
  });

  $('.hidden-dataInfo-input').val(JSON.stringify(dictionary));
  console.log(dictionary);

});
</script>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
